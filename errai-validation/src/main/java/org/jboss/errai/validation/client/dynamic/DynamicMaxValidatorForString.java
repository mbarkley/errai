package org.jboss.errai.validation.client.dynamic;

import java.lang.annotation.Annotation;
import java.util.Collections;
import java.util.Map;
import java.util.Set;

import javax.validation.ConstraintViolation;
import javax.validation.Payload;
import javax.validation.constraints.Max;

import com.google.gwt.validation.client.constraints.MaxValidatorForString;
import com.google.gwt.validation.client.impl.ConstraintViolationImpl;

// This class would be generated by Errai
public class DynamicMaxValidatorForString extends MaxValidatorForString implements GeneratedDynamicValidator<String> {

  @Override
  public Set<ConstraintViolation<String>> validate(final Map<String, String> parameters, final String value) {
    return validate(parameters, value, "{javax.validation.constraints.Max.message}");
  }

  @Override
  public Set<ConstraintViolation<String>> validate(Map<String, String> parameters, String value,
          String message) {
    
    this.initialize(new Max () {

      @Override
      public Class<? extends Annotation> annotationType() {
        return Max.class;
      }

      @Override
      public String message() {
        return message;
      }

      @Override
      public Class<?>[] groups() {
        return null;
      }

      @Override
      public Class<? extends Payload>[] payload() {
        return null;
      }

      @Override
      public long value() {
        return Long.valueOf(parameters.get("value"));
      }
      
    });
    
    if (this.isValid(value, null)) {
      return Collections.emptySet();
    }
    else {
      return Collections
              .singleton(ConstraintViolationImpl.<String> builder().setInvalidValue(value).setMessage(message).build());
    }
    
  }

}
